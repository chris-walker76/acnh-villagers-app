[{"C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\index.js":"1","C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\reportWebVitals.js":"2","C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\App\\App.js":"3","C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\VillagersList\\VillagersList.js":"4","C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\VillagerDetail\\VillagerDetail.js":"5","C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\ExternalLinks\\ExternalLinks.js":"6"},{"size":515,"mtime":1609954916624,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":1760,"mtime":1612440126749,"results":"10","hashOfConfig":"8"},{"size":2226,"mtime":1613059739845,"results":"11","hashOfConfig":"8"},{"size":4232,"mtime":1613064672300,"results":"12","hashOfConfig":"8"},{"size":591,"mtime":1612985788028,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"825tzm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\index.js",[],["28","29"],"C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\reportWebVitals.js",[],"C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\App\\App.js",[],"C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\VillagersList\\VillagersList.js",[],"C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\VillagerDetail\\VillagerDetail.js",["30"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './VillagerDetail.css';\r\nimport ExternalLinks from '../ExternalLinks/ExternalLinks';\r\n\r\nconst VillagerDetail = (props) => {\r\n\r\n    // Initialise state - we will retrieve the attributes of one specific villager into state.\r\n    // OK to hold state here, in a child component, as it's not passed anywhere and only used\r\n    // for the purposes of rendering this component.\r\n    const [villager, setVillager] = useState(null);\r\n\r\n    // 'Match' object is automatically received as a prop from the component that <Link>'ed to here.\r\n    // It contains properties such as parameters, path and URL.\r\n    // We can use the 'id' param to determine the villager ID of the link that was clicked and led here.\r\n    const villagerId = props.match.params['id'];\r\n    const villagerUrl = `https://acnhapi.com/v1/villagers/${villagerId}`;\r\n\r\n    // Make the API call to fetch a specific villager.\r\n    const fetchVillager = async() => {\r\n        try {\r\n            const fetchVillager = await fetch(villagerUrl);\r\n            if (fetchVillager.ok) {\r\n                const villager = await fetchVillager.json();\r\n                // Store the returned villager object in state.\r\n                setVillager(villager);\r\n            } else {\r\n                // Response is not OK, so throw an error\r\n                throw new Error(`Error fetching villager: ID = ${villagerId}.`);\r\n            }\r\n        }\r\n        catch (error) {\r\n        console.log(error);\r\n        }\r\n    };\r\n\r\n    // Create a side-effect to fetch the specfic villager details after the component mounts.\r\n    useEffect(() => {\r\n        // Call the function to make a call to the villagers API.\r\n        fetchVillager();\r\n    }, []);\r\n\r\n    // Make sure the effect has run and that we have a villager in state before trying to return JSX.\r\n    // If not, return 'Loading...' text instead.\r\n    if (!villager) {\r\n        return <div id=\"villagerDetail\" className=\"loadingBox\">Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { /* Use clearix to correct the layout after using 'float' in the header. */ }\r\n            <div className=\"header clearfix\">\r\n                <div className=\"backButton top\"><Link to={'/'} onClick={() => props.history.goBack()}><ion-icon name=\"arrow-back-circle-outline\"></ion-icon></Link></div>\r\n                <div className=\"externalLinksDetail\"><ExternalLinks /></div>\r\n            </div>\r\n            <div id=\"villagerDetail\" className=\"villagerDetail\">\r\n                <div className=\"headingBox1\">My name is</div>\r\n                <div className=\"headingBox2\">{ villager['name']['name-EUen'] }</div>\r\n                <img src={ villager.image_uri } alt={ villager['name']['name-EUen'] } />\r\n                <div>\r\n                    <div className=\"sectionBox\">Gender:&nbsp; &nbsp;<span className=\"property\">{ villager.gender }</span></div>\r\n                    <div className=\"sectionBox\">Species:&nbsp; &nbsp;<span className=\"property\">{ villager.species }</span></div>\r\n                    <div className=\"sectionBox\">Personality:&nbsp; &nbsp;<span className=\"property\">{ villager.personality }</span></div>\r\n                    <div className=\"sectionBox\">Birthday:&nbsp; &nbsp;<span className=\"property\">{ villager['birthday-string'] }</span></div>\r\n                    <div className=\"sectionBox\">Hobby:&nbsp; &nbsp;<span className=\"property\">{ villager.hobby }</span></div>\r\n                    <div className=\"sectionBox\">Catchphrase:&nbsp; &nbsp; <span className=\"quote\">&quot;{ villager['catch-phrase'] }&quot;</span></div>\r\n                    <div className=\"sectionBox\">Saying:&nbsp; &nbsp; <span className=\"quote\">&quot;{ villager.saying }&quot;</span></div>\r\n                </div>\r\n                <div className=\"backButton bottom\"><Link to={'/'} onClick={() => props.history.goBack()}><ion-icon name=\"arrow-back-circle-outline\"></ion-icon></Link></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Define props expected to be passed to this component.\r\nVillagerDetail.propTypes = {\r\n    match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default VillagerDetail;","C:\\Users\\chris\\OneDrive\\My Practice\\acnh\\src\\Components\\ExternalLinks\\ExternalLinks.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":42,"column":8,"nodeType":"37","endLine":42,"endColumn":10,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchVillager'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [fetchVillager]",{"range":"44","text":"45"},[1823,1825],"[fetchVillager]"]